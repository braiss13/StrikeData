@page
@model StrikeData.Pages.TeamData.HittingModel
@using System.Text.Json

@{
    ViewData["Title"] = "Hitting Stats";
}

<h2 class="section-title">Hitting Stats</h2>

<form method="get">
    <div class="table-selector">
        <select id="statSelect"
                asp-for="SelectedStatTypeId"
                asp-items="Model.StatOptions"
                class="form-select w-auto d-inline-block"
                style="background-color:#1e3a8a;
                       color:#ffffff;
                       border:1px solid #2563eb;
                       border-radius:0.25rem;
                       padding:0.4rem 0.8rem;
                       margin-bottom: 1rem;"
                onchange="this.form.submit();">
        </select>
    </div>
</form>

<!-- Área para mostrar la explicación de la estadística seleccionada -->
<p id="statDescription" class="stat-desc" style="margin-left: 10px; color: #93c5fd;"></p>

<table class="table table-striped sortable-table table-bordered table-sm pitching-table" style="margin: 1 auto;">
    <thead>
        <tr>
            <th data-sortable data-type="number">#</th>
            <th data-sortable data-type="string">Team</th>
            <th data-sortable data-type="number">Games</th>
            <th data-sortable data-type="number">Total</th>
            <th data-sortable data-type="number">Season</th>
            <th data-sortable data-type="number">Last 3</th>
            <th data-sortable data-type="number">Last 1</th>
            <th data-sortable data-type="number">Home</th>
            <th data-sortable data-type="number">Away</th>
            <th data-sortable data-type="number">Previous</th>
        </tr>
    </thead>
    <tbody>
    @{
        var index = 1;
        if (Model.TeamStats != null && Model.TeamStats.Count > 0)
        {
            foreach (var stat in Model.TeamStats)
            {
                <tr>
                    <td>@index</td>
                    <td>@stat.Team.Name</td>
                    <td>@(stat.Team.Games ?? 0)</td>
                    <td>@(stat.Total ?? 0)</td>
                    <td>@stat.CurrentSeason</td>
                    <td>@(stat.Last3Games ?? 0)</td>
                    <td>@(stat.LastGame ?? 0)</td>
                    <td>@(stat.Home ?? 0)</td>
                    <td>@(stat.Away ?? 0)</td>
                    <td>@(stat.PrevSeason ?? 0)</td>
                </tr>
                index++;
            }
        }
        else
        {
            <tr>
                <td colspan="10" style="text-align:center;">No data available</td>
            </tr>
        }
    }
    </tbody>
</table>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            // Diccionario renderizado desde el modelo en JSON seguro
            const descriptions = @Html.Raw(JsonSerializer.Serialize(Model.StatDescriptions));
            // Inicializa el comportamiento reutilizable
            StrikeData.initStatDescription('statSelect', 'statDescription', descriptions);
        });
    </script>
}
